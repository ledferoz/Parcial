#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Parcial")]
	public partial class ParcialDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertClientes(Clientes instance);
    partial void UpdateClientes(Clientes instance);
    partial void DeleteClientes(Clientes instance);
    partial void InsertDetalle(Detalle instance);
    partial void UpdateDetalle(Detalle instance);
    partial void DeleteDetalle(Detalle instance);
    partial void InsertEstablecimiento(Establecimiento instance);
    partial void UpdateEstablecimiento(Establecimiento instance);
    partial void DeleteEstablecimiento(Establecimiento instance);
    partial void InsertFactura(Factura instance);
    partial void UpdateFactura(Factura instance);
    partial void DeleteFactura(Factura instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    partial void InsertProveedor(Proveedor instance);
    partial void UpdateProveedor(Proveedor instance);
    partial void DeleteProveedor(Proveedor instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    #endregion
		
		public ParcialDataContext() : 
				base(global::Linq.Properties.Settings.Default.ParcialConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ParcialDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ParcialDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ParcialDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ParcialDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Clientes> Clientes
		{
			get
			{
				return this.GetTable<Clientes>();
			}
		}
		
		public System.Data.Linq.Table<Detalle> Detalle
		{
			get
			{
				return this.GetTable<Detalle>();
			}
		}
		
		public System.Data.Linq.Table<Establecimiento> Establecimiento
		{
			get
			{
				return this.GetTable<Establecimiento>();
			}
		}
		
		public System.Data.Linq.Table<Factura> Factura
		{
			get
			{
				return this.GetTable<Factura>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Producto
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
		
		public System.Data.Linq.Table<Proveedor> Proveedor
		{
			get
			{
				return this.GetTable<Proveedor>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.registrarProveedor")]
		public int registrarProveedor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(20)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(30)")] string direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(15)")] string telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(15)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombre, direccion, telefono, email);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.iniciarSesion")]
		public ISingleResult<iniciarSesionResult> iniciarSesion([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string usuario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(16)")] string contrasenia)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usuario, contrasenia);
			return ((ISingleResult<iniciarSesionResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clientes")]
	public partial class Clientes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdClientePk;
		
		private string _Nombres;
		
		private string _Apellidos;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private EntitySet<Factura> _Factura;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClientePkChanging(int value);
    partial void OnIdClientePkChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public Clientes()
		{
			this._Factura = new EntitySet<Factura>(new Action<Factura>(this.attach_Factura), new Action<Factura>(this.detach_Factura));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClientePk", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdClientePk
		{
			get
			{
				return this._IdClientePk;
			}
			set
			{
				if ((this._IdClientePk != value))
				{
					this.OnIdClientePkChanging(value);
					this.SendPropertyChanging();
					this._IdClientePk = value;
					this.SendPropertyChanged("IdClientePk");
					this.OnIdClientePkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NChar(15) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Factura", Storage="_Factura", ThisKey="IdClientePk", OtherKey="IdClienteFk")]
		public EntitySet<Factura> Factura
		{
			get
			{
				return this._Factura;
			}
			set
			{
				this._Factura.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = this;
		}
		
		private void detach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detalle")]
	public partial class Detalle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDetalle;
		
		private int _IdFacturaFk;
		
		private int _IdProductoFk;
		
		private int _Cantidad;
		
		private int _ValorParcial;
		
		private int _PrecioVenta;
		
		private EntityRef<Factura> _Factura;
		
		private EntityRef<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDetalleChanging(int value);
    partial void OnIdDetalleChanged();
    partial void OnIdFacturaFkChanging(int value);
    partial void OnIdFacturaFkChanged();
    partial void OnIdProductoFkChanging(int value);
    partial void OnIdProductoFkChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    partial void OnValorParcialChanging(int value);
    partial void OnValorParcialChanged();
    partial void OnPrecioVentaChanging(int value);
    partial void OnPrecioVentaChanged();
    #endregion
		
		public Detalle()
		{
			this._Factura = default(EntityRef<Factura>);
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDetalle", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDetalle
		{
			get
			{
				return this._IdDetalle;
			}
			set
			{
				if ((this._IdDetalle != value))
				{
					this.OnIdDetalleChanging(value);
					this.SendPropertyChanging();
					this._IdDetalle = value;
					this.SendPropertyChanged("IdDetalle");
					this.OnIdDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFacturaFk", DbType="Int NOT NULL")]
		public int IdFacturaFk
		{
			get
			{
				return this._IdFacturaFk;
			}
			set
			{
				if ((this._IdFacturaFk != value))
				{
					if (this._Factura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFacturaFkChanging(value);
					this.SendPropertyChanging();
					this._IdFacturaFk = value;
					this.SendPropertyChanged("IdFacturaFk");
					this.OnIdFacturaFkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductoFk", DbType="Int NOT NULL")]
		public int IdProductoFk
		{
			get
			{
				return this._IdProductoFk;
			}
			set
			{
				if ((this._IdProductoFk != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductoFkChanging(value);
					this.SendPropertyChanging();
					this._IdProductoFk = value;
					this.SendPropertyChanged("IdProductoFk");
					this.OnIdProductoFkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValorParcial", DbType="Int NOT NULL")]
		public int ValorParcial
		{
			get
			{
				return this._ValorParcial;
			}
			set
			{
				if ((this._ValorParcial != value))
				{
					this.OnValorParcialChanging(value);
					this.SendPropertyChanging();
					this._ValorParcial = value;
					this.SendPropertyChanged("ValorParcial");
					this.OnValorParcialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioVenta", DbType="Int NOT NULL")]
		public int PrecioVenta
		{
			get
			{
				return this._PrecioVenta;
			}
			set
			{
				if ((this._PrecioVenta != value))
				{
					this.OnPrecioVentaChanging(value);
					this.SendPropertyChanging();
					this._PrecioVenta = value;
					this.SendPropertyChanged("PrecioVenta");
					this.OnPrecioVentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Detalle", Storage="_Factura", ThisKey="IdFacturaFk", OtherKey="IdFacturaPk", IsForeignKey=true)]
		public Factura Factura
		{
			get
			{
				return this._Factura.Entity;
			}
			set
			{
				Factura previousValue = this._Factura.Entity;
				if (((previousValue != value) 
							|| (this._Factura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Factura.Entity = null;
						previousValue.Detalle.Remove(this);
					}
					this._Factura.Entity = value;
					if ((value != null))
					{
						value.Detalle.Add(this);
						this._IdFacturaFk = value.IdFacturaPk;
					}
					else
					{
						this._IdFacturaFk = default(int);
					}
					this.SendPropertyChanged("Factura");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Detalle", Storage="_Producto", ThisKey="IdProductoFk", OtherKey="IdProductoPk", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.Detalle.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.Detalle.Add(this);
						this._IdProductoFk = value.IdProductoPk;
					}
					else
					{
						this._IdProductoFk = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Establecimiento")]
	public partial class Establecimiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEstablecimientoPk;
		
		private string _Nombre;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private EntitySet<Factura> _Factura;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEstablecimientoPkChanging(int value);
    partial void OnIdEstablecimientoPkChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public Establecimiento()
		{
			this._Factura = new EntitySet<Factura>(new Action<Factura>(this.attach_Factura), new Action<Factura>(this.detach_Factura));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstablecimientoPk", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEstablecimientoPk
		{
			get
			{
				return this._IdEstablecimientoPk;
			}
			set
			{
				if ((this._IdEstablecimientoPk != value))
				{
					this.OnIdEstablecimientoPkChanging(value);
					this.SendPropertyChanging();
					this._IdEstablecimientoPk = value;
					this.SendPropertyChanged("IdEstablecimientoPk");
					this.OnIdEstablecimientoPkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NChar(15) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Establecimiento_Factura", Storage="_Factura", ThisKey="IdEstablecimientoPk", OtherKey="IdEstablecimientoFk")]
		public EntitySet<Factura> Factura
		{
			get
			{
				return this._Factura;
			}
			set
			{
				this._Factura.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Establecimiento = this;
		}
		
		private void detach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Establecimiento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Factura")]
	public partial class Factura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFacturaPk;
		
		private System.DateTime _Fecha;
		
		private int _ValorTotal;
		
		private int _IdUsuarioFk;
		
		private int _IdClienteFk;
		
		private int _IdEstablecimientoFk;
		
		private EntitySet<Detalle> _Detalle;
		
		private EntityRef<Clientes> _Clientes;
		
		private EntityRef<Establecimiento> _Establecimiento;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFacturaPkChanging(int value);
    partial void OnIdFacturaPkChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnValorTotalChanging(int value);
    partial void OnValorTotalChanged();
    partial void OnIdUsuarioFkChanging(int value);
    partial void OnIdUsuarioFkChanged();
    partial void OnIdClienteFkChanging(int value);
    partial void OnIdClienteFkChanged();
    partial void OnIdEstablecimientoFkChanging(int value);
    partial void OnIdEstablecimientoFkChanged();
    #endregion
		
		public Factura()
		{
			this._Detalle = new EntitySet<Detalle>(new Action<Detalle>(this.attach_Detalle), new Action<Detalle>(this.detach_Detalle));
			this._Clientes = default(EntityRef<Clientes>);
			this._Establecimiento = default(EntityRef<Establecimiento>);
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFacturaPk", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdFacturaPk
		{
			get
			{
				return this._IdFacturaPk;
			}
			set
			{
				if ((this._IdFacturaPk != value))
				{
					this.OnIdFacturaPkChanging(value);
					this.SendPropertyChanging();
					this._IdFacturaPk = value;
					this.SendPropertyChanged("IdFacturaPk");
					this.OnIdFacturaPkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValorTotal", DbType="Int NOT NULL")]
		public int ValorTotal
		{
			get
			{
				return this._ValorTotal;
			}
			set
			{
				if ((this._ValorTotal != value))
				{
					this.OnValorTotalChanging(value);
					this.SendPropertyChanging();
					this._ValorTotal = value;
					this.SendPropertyChanged("ValorTotal");
					this.OnValorTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuarioFk", DbType="Int NOT NULL")]
		public int IdUsuarioFk
		{
			get
			{
				return this._IdUsuarioFk;
			}
			set
			{
				if ((this._IdUsuarioFk != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioFkChanging(value);
					this.SendPropertyChanging();
					this._IdUsuarioFk = value;
					this.SendPropertyChanged("IdUsuarioFk");
					this.OnIdUsuarioFkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClienteFk", DbType="Int NOT NULL")]
		public int IdClienteFk
		{
			get
			{
				return this._IdClienteFk;
			}
			set
			{
				if ((this._IdClienteFk != value))
				{
					if (this._Clientes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClienteFkChanging(value);
					this.SendPropertyChanging();
					this._IdClienteFk = value;
					this.SendPropertyChanged("IdClienteFk");
					this.OnIdClienteFkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstablecimientoFk", DbType="Int NOT NULL")]
		public int IdEstablecimientoFk
		{
			get
			{
				return this._IdEstablecimientoFk;
			}
			set
			{
				if ((this._IdEstablecimientoFk != value))
				{
					if (this._Establecimiento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEstablecimientoFkChanging(value);
					this.SendPropertyChanging();
					this._IdEstablecimientoFk = value;
					this.SendPropertyChanged("IdEstablecimientoFk");
					this.OnIdEstablecimientoFkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Detalle", Storage="_Detalle", ThisKey="IdFacturaPk", OtherKey="IdFacturaFk")]
		public EntitySet<Detalle> Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				this._Detalle.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Factura", Storage="_Clientes", ThisKey="IdClienteFk", OtherKey="IdClientePk", IsForeignKey=true)]
		public Clientes Clientes
		{
			get
			{
				return this._Clientes.Entity;
			}
			set
			{
				Clientes previousValue = this._Clientes.Entity;
				if (((previousValue != value) 
							|| (this._Clientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clientes.Entity = null;
						previousValue.Factura.Remove(this);
					}
					this._Clientes.Entity = value;
					if ((value != null))
					{
						value.Factura.Add(this);
						this._IdClienteFk = value.IdClientePk;
					}
					else
					{
						this._IdClienteFk = default(int);
					}
					this.SendPropertyChanged("Clientes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Establecimiento_Factura", Storage="_Establecimiento", ThisKey="IdEstablecimientoFk", OtherKey="IdEstablecimientoPk", IsForeignKey=true)]
		public Establecimiento Establecimiento
		{
			get
			{
				return this._Establecimiento.Entity;
			}
			set
			{
				Establecimiento previousValue = this._Establecimiento.Entity;
				if (((previousValue != value) 
							|| (this._Establecimiento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Establecimiento.Entity = null;
						previousValue.Factura.Remove(this);
					}
					this._Establecimiento.Entity = value;
					if ((value != null))
					{
						value.Factura.Add(this);
						this._IdEstablecimientoFk = value.IdEstablecimientoPk;
					}
					else
					{
						this._IdEstablecimientoFk = default(int);
					}
					this.SendPropertyChanged("Establecimiento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Factura", Storage="_Usuarios", ThisKey="IdUsuarioFk", OtherKey="IdUsuarioPk", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Factura.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Factura.Add(this);
						this._IdUsuarioFk = value.IdUsuarioPk;
					}
					else
					{
						this._IdUsuarioFk = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalle(Detalle entity)
		{
			this.SendPropertyChanging();
			entity.Factura = this;
		}
		
		private void detach_Detalle(Detalle entity)
		{
			this.SendPropertyChanging();
			entity.Factura = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProductoPk;
		
		private string _Nombre;
		
		private int _IdProveedorFk;
		
		private System.DateTime _FechaFabricacion;
		
		private System.DateTime _FechaCaducidad;
		
		private int _PesoKilos;
		
		private int _ValorCompra;
		
		private int _UtilidadNeta;
		
		private int _Cantidad;
		
		private EntitySet<Detalle> _Detalle;
		
		private EntityRef<Proveedor> _Proveedor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductoPkChanging(int value);
    partial void OnIdProductoPkChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnIdProveedorFkChanging(int value);
    partial void OnIdProveedorFkChanged();
    partial void OnFechaFabricacionChanging(System.DateTime value);
    partial void OnFechaFabricacionChanged();
    partial void OnFechaCaducidadChanging(System.DateTime value);
    partial void OnFechaCaducidadChanged();
    partial void OnPesoKilosChanging(int value);
    partial void OnPesoKilosChanged();
    partial void OnValorCompraChanging(int value);
    partial void OnValorCompraChanged();
    partial void OnUtilidadNetaChanging(int value);
    partial void OnUtilidadNetaChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    #endregion
		
		public Producto()
		{
			this._Detalle = new EntitySet<Detalle>(new Action<Detalle>(this.attach_Detalle), new Action<Detalle>(this.detach_Detalle));
			this._Proveedor = default(EntityRef<Proveedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductoPk", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProductoPk
		{
			get
			{
				return this._IdProductoPk;
			}
			set
			{
				if ((this._IdProductoPk != value))
				{
					this.OnIdProductoPkChanging(value);
					this.SendPropertyChanging();
					this._IdProductoPk = value;
					this.SendPropertyChanged("IdProductoPk");
					this.OnIdProductoPkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProveedorFk", DbType="Int NOT NULL")]
		public int IdProveedorFk
		{
			get
			{
				return this._IdProveedorFk;
			}
			set
			{
				if ((this._IdProveedorFk != value))
				{
					if (this._Proveedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProveedorFkChanging(value);
					this.SendPropertyChanging();
					this._IdProveedorFk = value;
					this.SendPropertyChanged("IdProveedorFk");
					this.OnIdProveedorFkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFabricacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaFabricacion
		{
			get
			{
				return this._FechaFabricacion;
			}
			set
			{
				if ((this._FechaFabricacion != value))
				{
					this.OnFechaFabricacionChanging(value);
					this.SendPropertyChanging();
					this._FechaFabricacion = value;
					this.SendPropertyChanged("FechaFabricacion");
					this.OnFechaFabricacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCaducidad", DbType="DateTime NOT NULL")]
		public System.DateTime FechaCaducidad
		{
			get
			{
				return this._FechaCaducidad;
			}
			set
			{
				if ((this._FechaCaducidad != value))
				{
					this.OnFechaCaducidadChanging(value);
					this.SendPropertyChanging();
					this._FechaCaducidad = value;
					this.SendPropertyChanged("FechaCaducidad");
					this.OnFechaCaducidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PesoKilos", DbType="Int NOT NULL")]
		public int PesoKilos
		{
			get
			{
				return this._PesoKilos;
			}
			set
			{
				if ((this._PesoKilos != value))
				{
					this.OnPesoKilosChanging(value);
					this.SendPropertyChanging();
					this._PesoKilos = value;
					this.SendPropertyChanged("PesoKilos");
					this.OnPesoKilosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValorCompra", DbType="Int NOT NULL")]
		public int ValorCompra
		{
			get
			{
				return this._ValorCompra;
			}
			set
			{
				if ((this._ValorCompra != value))
				{
					this.OnValorCompraChanging(value);
					this.SendPropertyChanging();
					this._ValorCompra = value;
					this.SendPropertyChanged("ValorCompra");
					this.OnValorCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UtilidadNeta", DbType="Int NOT NULL")]
		public int UtilidadNeta
		{
			get
			{
				return this._UtilidadNeta;
			}
			set
			{
				if ((this._UtilidadNeta != value))
				{
					this.OnUtilidadNetaChanging(value);
					this.SendPropertyChanging();
					this._UtilidadNeta = value;
					this.SendPropertyChanged("UtilidadNeta");
					this.OnUtilidadNetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Detalle", Storage="_Detalle", ThisKey="IdProductoPk", OtherKey="IdProductoFk")]
		public EntitySet<Detalle> Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				this._Detalle.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_Producto", Storage="_Proveedor", ThisKey="IdProveedorFk", OtherKey="IdProveedorPk", IsForeignKey=true)]
		public Proveedor Proveedor
		{
			get
			{
				return this._Proveedor.Entity;
			}
			set
			{
				Proveedor previousValue = this._Proveedor.Entity;
				if (((previousValue != value) 
							|| (this._Proveedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedor.Entity = null;
						previousValue.Producto.Remove(this);
					}
					this._Proveedor.Entity = value;
					if ((value != null))
					{
						value.Producto.Add(this);
						this._IdProveedorFk = value.IdProveedorPk;
					}
					else
					{
						this._IdProveedorFk = default(int);
					}
					this.SendPropertyChanged("Proveedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalle(Detalle entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_Detalle(Detalle entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proveedor")]
	public partial class Proveedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProveedorPk;
		
		private string _Nombre;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private string _Email;
		
		private EntitySet<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProveedorPkChanging(int value);
    partial void OnIdProveedorPkChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Proveedor()
		{
			this._Producto = new EntitySet<Producto>(new Action<Producto>(this.attach_Producto), new Action<Producto>(this.detach_Producto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProveedorPk", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProveedorPk
		{
			get
			{
				return this._IdProveedorPk;
			}
			set
			{
				if ((this._IdProveedorPk != value))
				{
					this.OnIdProveedorPkChanging(value);
					this.SendPropertyChanging();
					this._IdProveedorPk = value;
					this.SendPropertyChanged("IdProveedorPk");
					this.OnIdProveedorPkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NChar(15) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_Producto", Storage="_Producto", ThisKey="IdProveedorPk", OtherKey="IdProveedorFk")]
		public EntitySet<Producto> Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = this;
		}
		
		private void detach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuarioPk;
		
		private string _usuario;
		
		private string _contrasenia;
		
		private int _Rol;
		
		private EntitySet<Factura> _Factura;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioPkChanging(int value);
    partial void OnIdUsuarioPkChanged();
    partial void OnusuarioChanging(string value);
    partial void OnusuarioChanged();
    partial void OncontraseniaChanging(string value);
    partial void OncontraseniaChanged();
    partial void OnRolChanging(int value);
    partial void OnRolChanged();
    #endregion
		
		public Usuarios()
		{
			this._Factura = new EntitySet<Factura>(new Action<Factura>(this.attach_Factura), new Action<Factura>(this.detach_Factura));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuarioPk", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUsuarioPk
		{
			get
			{
				return this._IdUsuarioPk;
			}
			set
			{
				if ((this._IdUsuarioPk != value))
				{
					this.OnIdUsuarioPkChanging(value);
					this.SendPropertyChanging();
					this._IdUsuarioPk = value;
					this.SendPropertyChanged("IdUsuarioPk");
					this.OnIdUsuarioPkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario", DbType="VarChar(24) NOT NULL", CanBeNull=false)]
		public string usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				if ((this._usuario != value))
				{
					this.OnusuarioChanging(value);
					this.SendPropertyChanging();
					this._usuario = value;
					this.SendPropertyChanged("usuario");
					this.OnusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contrasenia", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string contrasenia
		{
			get
			{
				return this._contrasenia;
			}
			set
			{
				if ((this._contrasenia != value))
				{
					this.OncontraseniaChanging(value);
					this.SendPropertyChanging();
					this._contrasenia = value;
					this.SendPropertyChanged("contrasenia");
					this.OncontraseniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rol", DbType="Int NOT NULL")]
		public int Rol
		{
			get
			{
				return this._Rol;
			}
			set
			{
				if ((this._Rol != value))
				{
					this.OnRolChanging(value);
					this.SendPropertyChanging();
					this._Rol = value;
					this.SendPropertyChanged("Rol");
					this.OnRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Factura", Storage="_Factura", ThisKey="IdUsuarioPk", OtherKey="IdUsuarioFk")]
		public EntitySet<Factura> Factura
		{
			get
			{
				return this._Factura;
			}
			set
			{
				this._Factura.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Factura(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
	}
	
	public partial class iniciarSesionResult
	{
		
		private int _Rol;
		
		public iniciarSesionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rol", DbType="Int NOT NULL")]
		public int Rol
		{
			get
			{
				return this._Rol;
			}
			set
			{
				if ((this._Rol != value))
				{
					this._Rol = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
